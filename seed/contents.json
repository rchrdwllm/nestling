[
  {
    "title": "Welcome to Software Engineering 1: Start Your Journey",
    "type": "lesson",
    "moduleId": "34ff4983-18f6-45db-a8f4-6cec58dc9dcf",
    "id": "187e81fb-3639-4ee1-81f0-6322bccf6744",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-18T00:28:57.792Z",
    "updatedAt": "2025-06-18T00:28:57.792Z",
    "content": "<p></p><img src=\"https://res.cloudinary.com/nestling-lan/image/upload/v1750206511/wfdgvxttbxpikjqkjbvd.jpg\" alt=\"wfdgvxttbxpikjqkjbvd\" style=\"width: 100%; height: auto; cursor: pointer;\" draggable=\"true\"><p><br>Welcome to <strong>Software Engineering 1</strong>! This course is your first step into the world of professional software development. Here, you’ll explore the essential principles, processes, and tools used in building reliable and maintainable software systems.<br></p><p>Please take a few minutes to complete the steps below to get started:</p><ol class=\"list-decimal pl-4\"><li><p><strong>Read the Course Syllabus</strong> – Understand the course objectives, grading system, schedule, and policies.</p></li><li><p><strong>Introduce Yourself</strong> – Head over to the discussion board and post a short introduction. Tell us about yourself, your interests, and your goals for this course.</p></li><li><p><strong>Explore the LMS Navigation</strong> – Familiarize yourself with the modules, assignments, and calendar so you don’t miss any important deadlines.</p></li><li><p><strong>Join the Communication Channels</strong> – Make sure you're connected to the class announcements and discussion forums for updates and support.</p></li><li><p><strong>Complete the Getting Started Quiz</strong> – This short quiz ensures you’ve read and understood the course requirements.<br><br>We’re excited to have you in this class! Let’s build great software—and skills—together.</p><p>If you have any questions, don’t hesitate to reach out to your instructor.<br></p></li></ol>",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "1.2 Types of Information Systems",
    "type": "lesson",
    "moduleId": "9f5e5d1a-6c9e-4ca9-8cb2-ad091404c9c9",
    "id": "190438c4-69b9-4c5a-9cf6-a32f8d0cd691",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-19T07:04:01.490Z",
    "updatedAt": "2025-06-19T07:04:01.490Z",
    "content": "<h2 class=\"text-2xl font-semibold\">Introduction</h2><ul class=\"list-disc pl-4\"><li><p>Systems development is a systematic process that includes phases such as planning, analysis, design, deployment, and maintenance. Here, in this course, we will primarily focus on −</p><ul class=\"list-disc pl-4\"><li><p>Systems analysis</p></li><li><p>Systems design<br></p></li></ul><h2 class=\"text-2xl font-semibold\">Systems Analysis</h2><p>It is a process of collecting and interpreting facts, identifying the problems, and decomposition of a system into its components.<br></p><p>System analysis is conducted for the purpose of studying a system or its parts in order to identify its objectives. It is a problem-solving technique that improves the system and ensures that all the components of the system work efficiently to accomplish its purpose.<br></p><p>Analysis specifies <strong>what the system should do</strong>.<br></p><h2 class=\"text-2xl font-semibold\">Systems Design</h2><p>It is a process of planning a new business system or replacing an existing system by defining its components or modules to satisfy the specific requirements. Before planning, you need to understand the old system thoroughly and determine how computers can best be used in order to operate efficiently.</p><p>System Design focuses on <strong>how to accomplish the objective of the system</strong>.<br></p><p>Software Engineering (SE) mainly focuses on −</p><ul class=\"list-disc pl-4\"><li><p>Systems</p></li><li><p>Processes</p></li><li><p>Technology<br></p></li></ul><h2 class=\"text-2xl font-semibold\">What is a System?</h2><p>The word System is derived from the Greek word <strong><em>\"Systema\"</em></strong>, which means an organized relationship between any set of components to achieve some common cause or objective.</p><p><em>A system is “an orderly grouping of interdependent components linked together according to a plan to achieve a specific goal.”</em><br></p><h3 class=\"text-2xl font-semibold\">Constraints of a System</h3><p>A system must have three basic constraints −</p><ul class=\"list-disc pl-4\"><li><p>A system must have some <strong>structure and behavior</strong> which is designed to achieve a predefined objective.</p></li><li><p><strong>Interconnectivity</strong> and <strong>interdependence</strong> must exist among the system components.</p></li><li><p>The <strong>objectives of the organization</strong> have a <strong>higher priority</strong> than the objectives of its subsystems.<br></p></li></ul><p>For example, the traffic management system, payroll system, automatic library system, human resources information system.<br></p><h2 class=\"text-2xl font-semibold\">Properties of a System</h2><p>A system has the following properties −<br></p><h3 class=\"text-2xl font-semibold\">Organization</h3><p>The organization implies structure and order. It is the arrangement of components that helps to achieve predetermined objectives.<br></p><h3 class=\"text-2xl font-semibold\">Interaction</h3><p>It is defined by the manner in which the components operate with each other.</p><p>For example, in an organization, the purchasing department must interact with the production department and payroll with the personnel department.<br></p><h3 class=\"text-2xl font-semibold\">Interdependence</h3><p>Interdependence means how the components of a system depend on one another. For proper functioning, the components are coordinated and linked together according to a specified plan. The output of one subsystem is required by other subsystems as input.<br></p><h3 class=\"text-2xl font-semibold\">Integration</h3><p>Integration is concerned with how system components are connected together. It means that the parts of the system work together within the system even if each part performs a unique function.<br></p><h3 class=\"text-2xl font-semibold\">Central Objective</h3><p>The objective of the system must be central. It may be real or stated. It is not uncommon for an organization to state an objective and operate to achieve another.<br></p><p>The users must know the main objective of a computer application early in the analysis for a successful design and conversion.<br></p><h2 class=\"text-2xl font-semibold\">Elements of a System</h2><p>The following diagram shows the elements of a system −</p><img src=\"https://www.tutorialspoint.com/system_analysis_and_design/images/system_elements.jpg\" alt=\"System Elements\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px;\" loading=\"lazy\" draggable=\"true\"><h3 class=\"text-2xl font-semibold\">Outputs and Inputs</h3><ul class=\"list-disc pl-4\"><li><p>The main aim of a system is to produce an output that is useful for its user.</p></li><li><p>Inputs are the information that enters into the system for processing.</p></li><li><p>The output is the outcome of processing.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Processor(s)</h3><ul class=\"list-disc pl-4\"><li><p>The processor is the element of a system that involves the actual transformation of input into an output.</p></li><li><p>It is the operational component of a system. Processors may modify the input either totally or partially, depending on the output specification.</p></li><li><p>As the output specifications change, so does the processing. In some cases, the input is also modified to enable the processor for handling the transformation.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Control</h3><ul class=\"list-disc pl-4\"><li><p>The control element guides the system.</p></li><li><p>It is the decision–making subsystem that controls the pattern of activities governing input, processing, and output.</p></li><li><p>The behavior of a computer system is controlled by the Operating System and software. In order to keep the system in balance, what and how much input is needed is determined by Output Specifications.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Feedback</h3><ul class=\"list-disc pl-4\"><li><p>Feedback provides control in a dynamic system.</p></li><li><p>Positive feedback is routine in nature that encourages the performance of the system.</p></li><li><p>Negative feedback is informational in nature that provides the controller with information for action.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Environment</h3><ul class=\"list-disc pl-4\"><li><p>The environment is the “supersystem” within which an organization operates.</p></li><li><p>It is the source of external elements that strike on the system.</p></li><li><p>It determines how a system must function. For example, vendors and competitors of the organization’s environment may provide constraints that affect the actual performance of the business.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Boundaries and Interface</h3><ul class=\"list-disc pl-4\"><li><p>A system should be defined by its boundaries. Boundaries are the limits that identify its components, processes, and interrelationship when it interfaces with another system.</p></li><li><p>Each system has boundaries that determine its sphere of influence and control.</p></li><li><p>The knowledge of the boundaries of a given system is crucial in determining the nature of its interface with other systems for successful design.<br></p></li></ul><h2 class=\"text-2xl font-semibold\">Types of Systems</h2><p>The systems can be divided into the following types −<br></p><h3 class=\"text-2xl font-semibold\">Physical or Abstract Systems</h3><ul class=\"list-disc pl-4\"><li><p>Physical systems are tangible entities. We can touch and feel them.</p></li><li><p>Physical Systems may be static or dynamic in nature. For example, desks and chairs are the physical parts of the computer center which are static. A programmed computer is a dynamic system in which programs, data, and applications can change according to the user's needs.</p></li><li><p>Abstract systems are non-physical entities or conceptual that may be formulas, representation, or model of a real system.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Open or Closed Systems</h3><ul class=\"list-disc pl-4\"><li><p>An open system must interact with its environment. It receives inputs from and delivers outputs to the outside of the system. For example, an information system that must adapt to the changing environmental conditions.</p></li><li><p>A closed system does not interact with its environment. It is isolated from environmental influences. A completely closed system is rare in reality.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Adaptive and Non-Adaptive System</h3><ul class=\"list-disc pl-4\"><li><p>Adaptive System responds to the change in the environment in a way to improve their performance and to survive. For example, human beings, animals.</p></li><li><p>A non-Adaptive System is a system that does not respond to the environment. For example, machines.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Permanent or Temporary System</h3><ul class=\"list-disc pl-4\"><li><p>Permanent System persists for a long time. For example, business policies.</p></li><li><p>Temporary System is made for a specified time and after that, they are demolished. For example, A DJ system is set up for a program and it is dissembled after the program.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Natural and Manufactured System</h3><ul class=\"list-disc pl-4\"><li><p>Natural systems are created by nature. For example, the Solar system, seasonal system.</p></li><li><p>Manufactured System is a man-made system. For example, Rockets, dams, trains.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Deterministic or Probabilistic System</h3><ul class=\"list-disc pl-4\"><li><p>The deterministic system operates in a predictable manner and the interaction between system components is known with certainty. For example, two molecules of hydrogen and one molecule of oxygen make water.</p></li><li><p>The probabilistic System shows uncertain behavior. The exact output is not known. For example, Weather forecasting, mail delivery.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Social, Human-Machine, Machine System</h3><ul class=\"list-disc pl-4\"><li><p>Social System is made up of people. For example, social clubs, societies.</p></li><li><p>In the Human-Machine System, both humans and machines are involved to perform a particular task. For example, Computer programming.</p></li><li><p>Machine System is where human interference is neglected. All the tasks are performed by the machine. For example, an autonomous robot.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Man-Made Information Systems</h3><ul class=\"list-disc pl-4\"><li><p>It is an interconnected set of information resources to manage data for a particular organization, under Direct Management Control (DMC).</p></li><li><p>This system includes hardware, software, communication, data, and application for producing information according to the need of an organization.</p><p>Man-made information systems are divided into three types −</p></li><li><p><strong>Formal Information System</strong> − It is based on the flow of information in the form of memos, instructions, etc., from top-level to lower levels of management.</p></li><li><p><strong>Informal Information System</strong> − This is an employee-based system that solves the day to day work-related problems.</p></li><li><p><strong>Computer-Based System</strong> − This system is directly dependent on the computer for managing business applications. For example, automatic library system, railway reservation system, banking system, etc.<br></p></li></ul><h2 class=\"text-2xl font-semibold\">Systems Models<br></h2><h3 class=\"text-2xl font-semibold\">Schematic Models</h3><ul class=\"list-disc pl-4\"><li><p>A schematic model is a 2-D chart that shows system elements and their linkages.</p></li><li><p>Different arrows are used to show information flow, material flow, and information feedback.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Flow System Models</h3><ul class=\"list-disc pl-4\"><li><p>A flow system model shows the orderly flow of the material, energy, and information that hold the system together.</p></li><li><p>Program Evaluation and Review Technique (PERT), for example, is used to abstract a real-world system in model form.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Static System Models</h3><ul class=\"list-disc pl-4\"><li><p>They represent one pair of relationships such as <em>activity–time</em> or <em>cost–quantity</em>.</p></li><li><p>The Gantt chart, for example, gives a static picture of an activity-time relationship.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Dynamic System Models</h3><ul class=\"list-disc pl-4\"><li><p>Business organizations are dynamic systems. A dynamic model approximates the type of organization or application that analysts deal with.</p></li><li><p>It shows an ongoing, constantly changing status of the system. It consists of −</p><ul class=\"list-disc pl-4\"><li><p>Inputs that enter the system</p></li><li><p>The processor through which transformation takes place</p></li><li><p>The program(s) required for processing</p></li><li><p>The output(s) that result from processing.</p></li></ul></li></ul></li></ul>",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "Assignment #1: SDLC Reflection Paper",
    "type": "assignment",
    "moduleId": "9f5e5d1a-6c9e-4ca9-8cb2-ad091404c9c9",
    "id": "1b19e773-301b-4016-a939-0173a649dfba",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-19T07:04:11.327Z",
    "updatedAt": "2025-06-19T07:04:11.327Z",
    "startDate": "2025-06-17T16:00:00.000Z",
    "endDate": "2025-06-25T15:59:00.000Z",
    "submissionType": "pdf",
    "points": 20,
    "maxAttempts": 2,
    "isLocked": false,
    "content": "<h3 class=\"text-2xl font-semibold\">📘 Assignment #1: SDLC Reflection Paper</h3><p><strong>Instructions:</strong><br>Write a <strong>1–2 page reflection</strong> discussing the following:</p><ol class=\"list-decimal pl-4\"><li><p>What you currently understand about the Software Development Life Cycle.</p></li><li><p>Why you think SDLC is important in software engineering.</p></li><li><p>If you’ve had previous experiences with software projects (academic or personal), which SDLC model did you follow (if any), and what were the results?</p></li><li><p>What part of the SDLC do you want to learn more about?</p></li></ol><p></p><p><strong>🗓 Deadline:</strong><br>Submit via the LMS <strong>on or before June 25 at 11:59 PM</strong>.</p><p><strong>📄 Format:</strong></p><ul class=\"list-disc pl-4\"><li><p>File type: PDF</p></li><li><p>Font: Arial or Times New Roman, 12pt</p></li><li><p>Spacing: 1.5</p></li><li><p>Filename: <code>SE1_Assignment1_YourFullName.pdf</code><br></p></li></ul><p><strong>📌 Reminders:</strong></p><ul class=\"list-disc pl-4\"><li><p>This is an <strong>individual assignment</strong>.</p></li><li><p>Plagiarism will result in a zero—make sure your answers are original.</p></li><li><p>Late submissions will be deducted 10% per day unless approved beforehand.<br></p></li></ul><p>If you have questions, don’t hesitate to post in the <strong>Assignment Q&amp;A thread</strong> or message me directly.</p><p>Looking forward to reading your insights!</p>",
    "isPublished": true
  },
  {
    "title": "Types of Information Systems Part 2",
    "type": "file",
    "moduleId": "d47623f3-a805-4fc2-8556-81445513310d",
    "id": "2e8a4c0d-2962-4a90-a87c-09b4cc43c87b",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-18T01:10:46.902Z",
    "updatedAt": "2025-06-18T01:10:46.902Z",
    "content": "",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "1.0 Intended Learning Outcomes and Topics",
    "type": "lesson",
    "moduleId": "d47623f3-a805-4fc2-8556-81445513310d",
    "id": "3d0c9524-eaab-4e47-a6b0-030635af24c0",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-18T00:40:19.351Z",
    "updatedAt": "2025-06-18T00:40:19.351Z",
    "content": "<h1 class=\"text-2xl font-semibold\">INTRODUCTION TO SYSTEMS ANALYSIS AND DESIGN<br></h1><p>This course deals with the concepts, skills, methodologies, techniques, tools, and perspectives essential for systems analysts.<br><br>Intended Learning Outcomes</p><p>At the end of this lesson, the student should be able to:<br></p><ul class=\"list-disc pl-4\"><li><p>Understand the importance, characteristic, paradigms of Systems Analysis and Design;</p></li><li><p>Equip students with structured analysis tools in undertaking software requirements analysis;</p></li><li><p>Apply software designing and implementation methods and metrics, cost-benefit analysis, and feasibility study to ensure software quality;&nbsp;</p></li><li><p>Develop critical thinking skills in analyzing, justifying, designing, and maintaining Information Systems and computer-based requirements;</p></li><li><p>Design and develop an application in computing using the different paradigms of system development.<br><br></p></li></ul>",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "Types of Information Systems Part 2",
    "type": "file",
    "moduleId": "9f5e5d1a-6c9e-4ca9-8cb2-ad091404c9c9",
    "id": "439a6531-8261-4c1f-bf6e-ff44bf13683e",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-19T07:04:06.935Z",
    "updatedAt": "2025-06-19T07:04:06.935Z",
    "content": "",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "2.2 Requirements Determination",
    "type": "lesson",
    "moduleId": "44d9e5e4-6aea-4c28-9b84-d8cab12249bd",
    "id": "4b61c02c-9c14-47a9-a972-0314c08e686d",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-19T07:04:15.057Z",
    "updatedAt": "2025-06-19T07:04:15.057Z",
    "content": "<h2 class=\"text-2xl font-semibold\">System Requirements</h2><p>To determine the systems’ requirements you want to work on, you have to cover all the requirements for the systems’ input, process, output, performance, scalability, and controls.<br><br>System Requirements Checklist</p><ul class=\"list-disc pl-4\"><li><p><strong>Inputs</strong></p><ul class=\"list-disc pl-4\"><li><p>Manufacturing employees must swipe their ID cards into online data collection terminals that record labor costs and calculate production efficiency</p></li><li><p>The department head must enter overtime hours on a separate screen</p></li></ul></li><li><p><strong>Processes</strong></p><ul class=\"list-disc pl-4\"><li><p>The student records system must calculate the GPA at the end of each semester</p></li><li><p>As the final step in year-end processing, the payroll system must update employee salaries, bonuses, and benefits and produce tax data required by the IRS.</p></li></ul></li><li><p><strong>Performance</strong></p><ul class=\"list-disc pl-4\"><li><p>The system must support 25 users online simultaneously</p></li><li><p>Response time must not exceed four seconds.</p></li></ul></li><li><p><strong>Controls</strong></p><ul class=\"list-disc pl-4\"><li><p>The system must provide logon security at the operating system level and at the application level</p></li><li><p>An employee record must be added, changed, or deleted only by a member of the human resources department</p></li></ul></li><li><p><strong>Scalability</strong></p><ul class=\"list-disc pl-4\"><li><p>A scalable system offers a better return on the initial investment</p></li><li><p>To evaluate scalability, you need information about projected future volume for all outputs, inputs, and processes</p></li></ul></li></ul><p></p><h2 class=\"text-2xl font-semibold\">Determining Requirements</h2><ul class=\"list-disc pl-4\"><li><p>Requirements are best determined by systems analysts <em>and</em> business people together</p></li><li><p>Techniques available to the systems analyst:</p><ul class=\"list-disc pl-4\"><li><p>Interviews</p></li><li><p>Questionnaires</p></li><li><p>Observation</p></li><li><p>Joint application development (JAD)</p></li><li><p>Document analysis</p></li></ul></li></ul><p></p><h3 class=\"text-2xl font-semibold\">The System Proposal</h3><ul class=\"list-disc pl-4\"><li><p>The result of the planning and analysis phases</p></li><li><p>Typically includes:</p><ul class=\"list-disc pl-4\"><li><p>Executive summary</p></li><li><p>System request</p></li><li><p>Work plan</p></li><li><p>Feasibility analysis</p></li><li><p>Requirements definition</p></li><li><p>Evolving system models</p></li></ul></li></ul><p></p><h3 class=\"text-2xl font-semibold\">Documentation</h3><ul class=\"list-disc pl-4\"><li><p>The Need for Recording the Facts</p><ul class=\"list-disc pl-4\"><li><p>Record information as soon as you obtain it</p></li><li><p>Use the simplest recording method</p></li><li><p>Record your findings in such a way that they can be understood by someone else</p></li><li><p>Organize your documentation so related material is located easily</p></li></ul></li></ul><ul class=\"list-disc pl-4\"><li><p>Software Tools</p><ul class=\"list-disc pl-4\"><li><p>CASE Tools</p></li><li><p>Productivity Software</p><ul class=\"list-disc pl-4\"><li><p>Word processing, spreadsheets, database management, presentation graphics, and collaborative software programs</p></li><li><p>Histogram</p></li></ul></li></ul></li></ul><p></p><h3 class=\"text-2xl font-semibold\">Software Tools</h3><ul class=\"list-disc pl-4\"><li><p>Graphics modeling software</p></li><li><p>Personal information managers</p></li><li><p>Wireless communication device</p><p></p></li></ul><p></p>",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "Assignment #1: SDLC Reflection Paper",
    "type": "assignment",
    "moduleId": "d47623f3-a805-4fc2-8556-81445513310d",
    "id": "519e8cd9-a47c-4e79-b6f5-6603b4497755",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-18T02:25:11.869Z",
    "updatedAt": "2025-06-18T02:25:11.869Z",
    "startDate": "2025-06-17T16:00:00.000Z",
    "endDate": "2025-06-25T15:59:00.000Z",
    "submissionType": "pdf",
    "points": 20,
    "maxAttempts": 2,
    "isLocked": false,
    "content": "<h3 class=\"text-2xl font-semibold\">📘 Assignment #1: SDLC Reflection Paper</h3><p><strong>Instructions:</strong><br>Write a <strong>1–2 page reflection</strong> discussing the following:</p><ol class=\"list-decimal pl-4\"><li><p>What you currently understand about the Software Development Life Cycle.</p></li><li><p>Why you think SDLC is important in software engineering.</p></li><li><p>If you’ve had previous experiences with software projects (academic or personal), which SDLC model did you follow (if any), and what were the results?</p></li><li><p>What part of the SDLC do you want to learn more about?</p></li></ol><p></p><p><strong>🗓 Deadline:</strong><br>Submit via the LMS <strong>on or before June 25 at 11:59 PM</strong>.</p><p><strong>📄 Format:</strong></p><ul class=\"list-disc pl-4\"><li><p>File type: PDF</p></li><li><p>Font: Arial or Times New Roman, 12pt</p></li><li><p>Spacing: 1.5</p></li><li><p>Filename: <code>SE1_Assignment1_YourFullName.pdf</code><br></p></li></ul><p><strong>📌 Reminders:</strong></p><ul class=\"list-disc pl-4\"><li><p>This is an <strong>individual assignment</strong>.</p></li><li><p>Plagiarism will result in a zero—make sure your answers are original.</p></li><li><p>Late submissions will be deducted 10% per day unless approved beforehand.<br></p></li></ul><p>If you have questions, don’t hesitate to post in the <strong>Assignment Q&amp;A thread</strong> or message me directly.</p><p>Looking forward to reading your insights!</p>",
    "isPublished": true
  },
  {
    "title": "2.1 Project Initiation: System Request",
    "type": "lesson",
    "moduleId": "5c815fc5-8d68-48a6-a07a-8a351644de5b",
    "id": "5e1cb0eb-8078-4b70-9f60-72d0773b0bb5",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-18T01:13:25.973Z",
    "updatedAt": "2025-06-18T01:13:25.973Z",
    "content": "<h2 class=\"text-2xl font-semibold\">Key Ideas</h2><ul class=\"list-disc pl-4\"><li><p>An opportunity to create business value from using information technology initiates a project.</p></li><li><p>Feasibility analysis helps determine whether or not to proceed with the IS project.</p></li><li><p>Projects are selected based on business needs and project risks.</p></li><li><p>The project sponsor is a key person who identifies business value to be gained from using information technology.</p></li><li><p>The approval committee reviews system requests from groups throughout the organization and selects projects for the benefit of the business.</p></li></ul><hr><h2 class=\"text-2xl font-semibold\"><br>Identifying Projects with Business Value</h2><p><strong>How Do Projects Begin?</strong></p><ul class=\"list-disc pl-4\"><li><p>Business needs should drive projects.</p><ul class=\"list-disc pl-4\"><li><p>Project sponsor recognizes business need for new system and desires to see it implemented.</p></li><li><p>Business needs determine the system’s functionality (what it will do).</p></li><li><p>The project’s business value should be clear.</p></li></ul></li></ul><hr><h2 class=\"text-2xl font-semibold\"><br>System Request</h2><p>A document describing business reasons for project and system’s expected value.</p><p>Lists project’s key elements:</p><ul class=\"list-disc pl-4\"><li><p>Project sponsor</p></li><li><p>Business need</p></li><li><p>Business requirements</p></li><li><p>Business value</p></li><li><p>Special issues or constraints</p></li></ul><hr><h2 class=\"text-2xl font-semibold\"><br>System Request Examples</h2><ul class=\"list-disc pl-4\"><li><p>Project sponsor – VP of Marketing</p></li><li><p>Business need – Reach new customers and improve service to existing customers</p></li><li><p>Business requirements – Provide web-based shopping capability</p></li><li><p>Business value - $750,000 in new customer sales; $1.8M in existing customer sales</p></li><li><p>Special issues or constraints – System must be operational by holiday shopping season</p></li></ul><hr><h2 class=\"text-2xl font-semibold\"><br>Preliminary Project Acceptance</h2><ul class=\"list-disc pl-4\"><li><p>System request is reviewed by approval committee.</p></li><li><p>Based on information provided, project merits are assessed.</p></li><li><p>Worthy projects are accepted and undergo additional investigation – the feasibility analysis.</p></li></ul>",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "2.0 Intended Learning Outcomes and Topics",
    "type": "lesson",
    "moduleId": "5c815fc5-8d68-48a6-a07a-8a351644de5b",
    "id": "61c682e8-64db-47bd-aedf-ba52cb7ed724",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-18T01:11:55.296Z",
    "isLocked": false,
    "isPublished": true,
    "content": "<h1 class=\"text-2xl font-semibold\">SYSTEMS ANALYSIS AND DESIGN</h1><p>This course deals with the concepts, skills, methodologies, techniques, tools, and perspectives essential for systems analysts.<br><br><strong>Intended Learning Outcomes</strong></p><p>At the end of this lesson, the student should be able to:</p><ol class=\"list-decimal pl-4\"><li><p>Know about Project Initiation;</p></li><li><p>Distinguish Requirements Determination;</p></li><li><p>Explain the importance of linking the information system to business needs;&nbsp;</p></li><li><p>Determine the components of system requirements;</p></li><li><p>Describe technical, economic, and organizational feasibility assessment; and</p></li><li><p>Be able to perform a feasibility analysis.<br></p></li></ol>",
    "updatedAt": "2025-06-18T01:12:35.959Z"
  },
  {
    "title": "Types of Information Systems Part 1",
    "type": "file",
    "moduleId": "d47623f3-a805-4fc2-8556-81445513310d",
    "id": "7ac54730-9e18-44ee-959f-8d1f7973ae88",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-18T01:10:22.135Z",
    "updatedAt": "2025-06-18T01:10:22.135Z",
    "content": "",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "Course Syllabus - Software Engineering 1",
    "type": "lesson",
    "moduleId": "4e1b4e93-3d1b-40e5-93cd-d5b39577f163",
    "id": "93d8bfa5-0766-41f6-ac5c-f867726864b4",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-19T07:03:58.828Z",
    "updatedAt": "2025-06-19T07:03:58.828Z",
    "content": "<p><strong>Course Title:</strong> Software Engineering 1<br><strong>Course Code:</strong> CS 301<br><strong>Credit Units:</strong> 3<br><strong>Prerequisite(s):</strong> Introduction to Programming, Object-Oriented Programming<br><strong>Schedule:</strong> Monday, Wednesday, Friday [7:30AM - 10:30AM]<br><strong>Instructor:</strong> Carlo R. Enrique<br><strong>Email:</strong> cramos@nestling.edu.ph<br>________________________________________________________________________________<br><br>📖 <strong>Course Description</strong></p><p>Software Engineering 1 introduces students to the principles and practices of developing high-quality software. Topics include software development life cycles, requirements engineering, software modeling, architectural design, and basic project planning. The course emphasizes teamwork, documentation, and the use of tools to manage the development process effectively.<br><br>🎯 <strong>Course Objectives</strong></p><p>By the end of this course, students should be able to:</p><ol class=\"list-decimal pl-4\"><li><p>Explain the software engineering process and its key phases.</p></li><li><p>Apply requirements-gathering techniques to real-world scenarios.</p></li><li><p>Create system models using UML or similar modeling tools.</p></li><li><p>Analyze and design basic software architectures.</p></li><li><p>Participate effectively in team-based software projects.</p></li><li><p>Use version control and documentation tools.</p></li><li><p>Demonstrate understanding of software quality and maintenance.<br><br></p></li></ol>",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "1.2 Types of Information Systems",
    "type": "lesson",
    "moduleId": "d47623f3-a805-4fc2-8556-81445513310d",
    "id": "96a77fbf-5d59-4318-9762-5ce90b493ef9",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-18T00:57:35.457Z",
    "updatedAt": "2025-06-18T00:57:35.457Z",
    "content": "<h2 class=\"text-2xl font-semibold\">Introduction</h2><ul class=\"list-disc pl-4\"><li><p>Systems development is a systematic process that includes phases such as planning, analysis, design, deployment, and maintenance. Here, in this course, we will primarily focus on −</p><ul class=\"list-disc pl-4\"><li><p>Systems analysis</p></li><li><p>Systems design<br></p></li></ul><h2 class=\"text-2xl font-semibold\">Systems Analysis</h2><p>It is a process of collecting and interpreting facts, identifying the problems, and decomposition of a system into its components.<br></p><p>System analysis is conducted for the purpose of studying a system or its parts in order to identify its objectives. It is a problem-solving technique that improves the system and ensures that all the components of the system work efficiently to accomplish its purpose.<br></p><p>Analysis specifies <strong>what the system should do</strong>.<br></p><h2 class=\"text-2xl font-semibold\">Systems Design</h2><p>It is a process of planning a new business system or replacing an existing system by defining its components or modules to satisfy the specific requirements. Before planning, you need to understand the old system thoroughly and determine how computers can best be used in order to operate efficiently.</p><p>System Design focuses on <strong>how to accomplish the objective of the system</strong>.<br></p><p>Software Engineering (SE) mainly focuses on −</p><ul class=\"list-disc pl-4\"><li><p>Systems</p></li><li><p>Processes</p></li><li><p>Technology<br></p></li></ul><h2 class=\"text-2xl font-semibold\">What is a System?</h2><p>The word System is derived from the Greek word <strong><em>\"Systema\"</em></strong>, which means an organized relationship between any set of components to achieve some common cause or objective.</p><p><em>A system is “an orderly grouping of interdependent components linked together according to a plan to achieve a specific goal.”</em><br></p><h3 class=\"text-2xl font-semibold\">Constraints of a System</h3><p>A system must have three basic constraints −</p><ul class=\"list-disc pl-4\"><li><p>A system must have some <strong>structure and behavior</strong> which is designed to achieve a predefined objective.</p></li><li><p><strong>Interconnectivity</strong> and <strong>interdependence</strong> must exist among the system components.</p></li><li><p>The <strong>objectives of the organization</strong> have a <strong>higher priority</strong> than the objectives of its subsystems.<br></p></li></ul><p>For example, the traffic management system, payroll system, automatic library system, human resources information system.<br></p><h2 class=\"text-2xl font-semibold\">Properties of a System</h2><p>A system has the following properties −<br></p><h3 class=\"text-2xl font-semibold\">Organization</h3><p>The organization implies structure and order. It is the arrangement of components that helps to achieve predetermined objectives.<br></p><h3 class=\"text-2xl font-semibold\">Interaction</h3><p>It is defined by the manner in which the components operate with each other.</p><p>For example, in an organization, the purchasing department must interact with the production department and payroll with the personnel department.<br></p><h3 class=\"text-2xl font-semibold\">Interdependence</h3><p>Interdependence means how the components of a system depend on one another. For proper functioning, the components are coordinated and linked together according to a specified plan. The output of one subsystem is required by other subsystems as input.<br></p><h3 class=\"text-2xl font-semibold\">Integration</h3><p>Integration is concerned with how system components are connected together. It means that the parts of the system work together within the system even if each part performs a unique function.<br></p><h3 class=\"text-2xl font-semibold\">Central Objective</h3><p>The objective of the system must be central. It may be real or stated. It is not uncommon for an organization to state an objective and operate to achieve another.<br></p><p>The users must know the main objective of a computer application early in the analysis for a successful design and conversion.<br></p><h2 class=\"text-2xl font-semibold\">Elements of a System</h2><p>The following diagram shows the elements of a system −</p><img src=\"https://www.tutorialspoint.com/system_analysis_and_design/images/system_elements.jpg\" alt=\"System Elements\" style=\"max-width: 100%; height: auto; vertical-align: middle; border: 0px;\" loading=\"lazy\" draggable=\"true\"><h3 class=\"text-2xl font-semibold\">Outputs and Inputs</h3><ul class=\"list-disc pl-4\"><li><p>The main aim of a system is to produce an output that is useful for its user.</p></li><li><p>Inputs are the information that enters into the system for processing.</p></li><li><p>The output is the outcome of processing.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Processor(s)</h3><ul class=\"list-disc pl-4\"><li><p>The processor is the element of a system that involves the actual transformation of input into an output.</p></li><li><p>It is the operational component of a system. Processors may modify the input either totally or partially, depending on the output specification.</p></li><li><p>As the output specifications change, so does the processing. In some cases, the input is also modified to enable the processor for handling the transformation.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Control</h3><ul class=\"list-disc pl-4\"><li><p>The control element guides the system.</p></li><li><p>It is the decision–making subsystem that controls the pattern of activities governing input, processing, and output.</p></li><li><p>The behavior of a computer system is controlled by the Operating System and software. In order to keep the system in balance, what and how much input is needed is determined by Output Specifications.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Feedback</h3><ul class=\"list-disc pl-4\"><li><p>Feedback provides control in a dynamic system.</p></li><li><p>Positive feedback is routine in nature that encourages the performance of the system.</p></li><li><p>Negative feedback is informational in nature that provides the controller with information for action.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Environment</h3><ul class=\"list-disc pl-4\"><li><p>The environment is the “supersystem” within which an organization operates.</p></li><li><p>It is the source of external elements that strike on the system.</p></li><li><p>It determines how a system must function. For example, vendors and competitors of the organization’s environment may provide constraints that affect the actual performance of the business.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Boundaries and Interface</h3><ul class=\"list-disc pl-4\"><li><p>A system should be defined by its boundaries. Boundaries are the limits that identify its components, processes, and interrelationship when it interfaces with another system.</p></li><li><p>Each system has boundaries that determine its sphere of influence and control.</p></li><li><p>The knowledge of the boundaries of a given system is crucial in determining the nature of its interface with other systems for successful design.<br></p></li></ul><h2 class=\"text-2xl font-semibold\">Types of Systems</h2><p>The systems can be divided into the following types −<br></p><h3 class=\"text-2xl font-semibold\">Physical or Abstract Systems</h3><ul class=\"list-disc pl-4\"><li><p>Physical systems are tangible entities. We can touch and feel them.</p></li><li><p>Physical Systems may be static or dynamic in nature. For example, desks and chairs are the physical parts of the computer center which are static. A programmed computer is a dynamic system in which programs, data, and applications can change according to the user's needs.</p></li><li><p>Abstract systems are non-physical entities or conceptual that may be formulas, representation, or model of a real system.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Open or Closed Systems</h3><ul class=\"list-disc pl-4\"><li><p>An open system must interact with its environment. It receives inputs from and delivers outputs to the outside of the system. For example, an information system that must adapt to the changing environmental conditions.</p></li><li><p>A closed system does not interact with its environment. It is isolated from environmental influences. A completely closed system is rare in reality.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Adaptive and Non-Adaptive System</h3><ul class=\"list-disc pl-4\"><li><p>Adaptive System responds to the change in the environment in a way to improve their performance and to survive. For example, human beings, animals.</p></li><li><p>A non-Adaptive System is a system that does not respond to the environment. For example, machines.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Permanent or Temporary System</h3><ul class=\"list-disc pl-4\"><li><p>Permanent System persists for a long time. For example, business policies.</p></li><li><p>Temporary System is made for a specified time and after that, they are demolished. For example, A DJ system is set up for a program and it is dissembled after the program.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Natural and Manufactured System</h3><ul class=\"list-disc pl-4\"><li><p>Natural systems are created by nature. For example, the Solar system, seasonal system.</p></li><li><p>Manufactured System is a man-made system. For example, Rockets, dams, trains.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Deterministic or Probabilistic System</h3><ul class=\"list-disc pl-4\"><li><p>The deterministic system operates in a predictable manner and the interaction between system components is known with certainty. For example, two molecules of hydrogen and one molecule of oxygen make water.</p></li><li><p>The probabilistic System shows uncertain behavior. The exact output is not known. For example, Weather forecasting, mail delivery.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Social, Human-Machine, Machine System</h3><ul class=\"list-disc pl-4\"><li><p>Social System is made up of people. For example, social clubs, societies.</p></li><li><p>In the Human-Machine System, both humans and machines are involved to perform a particular task. For example, Computer programming.</p></li><li><p>Machine System is where human interference is neglected. All the tasks are performed by the machine. For example, an autonomous robot.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Man-Made Information Systems</h3><ul class=\"list-disc pl-4\"><li><p>It is an interconnected set of information resources to manage data for a particular organization, under Direct Management Control (DMC).</p></li><li><p>This system includes hardware, software, communication, data, and application for producing information according to the need of an organization.</p><p>Man-made information systems are divided into three types −</p></li><li><p><strong>Formal Information System</strong> − It is based on the flow of information in the form of memos, instructions, etc., from top-level to lower levels of management.</p></li><li><p><strong>Informal Information System</strong> − This is an employee-based system that solves the day to day work-related problems.</p></li><li><p><strong>Computer-Based System</strong> − This system is directly dependent on the computer for managing business applications. For example, automatic library system, railway reservation system, banking system, etc.<br></p></li></ul><h2 class=\"text-2xl font-semibold\">Systems Models<br></h2><h3 class=\"text-2xl font-semibold\">Schematic Models</h3><ul class=\"list-disc pl-4\"><li><p>A schematic model is a 2-D chart that shows system elements and their linkages.</p></li><li><p>Different arrows are used to show information flow, material flow, and information feedback.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Flow System Models</h3><ul class=\"list-disc pl-4\"><li><p>A flow system model shows the orderly flow of the material, energy, and information that hold the system together.</p></li><li><p>Program Evaluation and Review Technique (PERT), for example, is used to abstract a real-world system in model form.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Static System Models</h3><ul class=\"list-disc pl-4\"><li><p>They represent one pair of relationships such as <em>activity–time</em> or <em>cost–quantity</em>.</p></li><li><p>The Gantt chart, for example, gives a static picture of an activity-time relationship.<br></p></li></ul><h3 class=\"text-2xl font-semibold\">Dynamic System Models</h3><ul class=\"list-disc pl-4\"><li><p>Business organizations are dynamic systems. A dynamic model approximates the type of organization or application that analysts deal with.</p></li><li><p>It shows an ongoing, constantly changing status of the system. It consists of −</p><ul class=\"list-disc pl-4\"><li><p>Inputs that enter the system</p></li><li><p>The processor through which transformation takes place</p></li><li><p>The program(s) required for processing</p></li><li><p>The output(s) that result from processing.</p></li></ul></li></ul></li></ul>",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "Welcome to Software Engineering 1: Start Your Journey",
    "type": "lesson",
    "moduleId": "4e1b4e93-3d1b-40e5-93cd-d5b39577f163",
    "id": "ca0d5b36-ac42-4dc8-ab88-268f734bbdea",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-19T07:03:56.006Z",
    "updatedAt": "2025-06-19T07:03:56.006Z",
    "content": "<p></p><img src=\"https://res.cloudinary.com/nestling-lan/image/upload/v1750206511/wfdgvxttbxpikjqkjbvd.jpg\" alt=\"wfdgvxttbxpikjqkjbvd\" style=\"width: 100%; height: auto; cursor: pointer;\" draggable=\"true\"><p><br>Welcome to <strong>Software Engineering 1</strong>! This course is your first step into the world of professional software development. Here, you’ll explore the essential principles, processes, and tools used in building reliable and maintainable software systems.<br></p><p>Please take a few minutes to complete the steps below to get started:</p><ol class=\"list-decimal pl-4\"><li><p><strong>Read the Course Syllabus</strong> – Understand the course objectives, grading system, schedule, and policies.</p></li><li><p><strong>Introduce Yourself</strong> – Head over to the discussion board and post a short introduction. Tell us about yourself, your interests, and your goals for this course.</p></li><li><p><strong>Explore the LMS Navigation</strong> – Familiarize yourself with the modules, assignments, and calendar so you don’t miss any important deadlines.</p></li><li><p><strong>Join the Communication Channels</strong> – Make sure you're connected to the class announcements and discussion forums for updates and support.</p></li><li><p><strong>Complete the Getting Started Quiz</strong> – This short quiz ensures you’ve read and understood the course requirements.<br><br>We’re excited to have you in this class! Let’s build great software—and skills—together.</p><p>If you have any questions, don’t hesitate to reach out to your instructor.<br></p></li></ol>",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "2.2 Requirements Determination",
    "type": "lesson",
    "moduleId": "5c815fc5-8d68-48a6-a07a-8a351644de5b",
    "id": "ca31f006-2913-4edd-b6ac-e3ad26cb5436",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-18T01:25:11.479Z",
    "updatedAt": "2025-06-18T01:25:11.479Z",
    "content": "<h2 class=\"text-2xl font-semibold\">System Requirements</h2><p>To determine the systems’ requirements you want to work on, you have to cover all the requirements for the systems’ input, process, output, performance, scalability, and controls.<br><br>System Requirements Checklist</p><ul class=\"list-disc pl-4\"><li><p><strong>Inputs</strong></p><ul class=\"list-disc pl-4\"><li><p>Manufacturing employees must swipe their ID cards into online data collection terminals that record labor costs and calculate production efficiency</p></li><li><p>The department head must enter overtime hours on a separate screen</p></li></ul></li><li><p><strong>Processes</strong></p><ul class=\"list-disc pl-4\"><li><p>The student records system must calculate the GPA at the end of each semester</p></li><li><p>As the final step in year-end processing, the payroll system must update employee salaries, bonuses, and benefits and produce tax data required by the IRS.</p></li></ul></li><li><p><strong>Performance</strong></p><ul class=\"list-disc pl-4\"><li><p>The system must support 25 users online simultaneously</p></li><li><p>Response time must not exceed four seconds.</p></li></ul></li><li><p><strong>Controls</strong></p><ul class=\"list-disc pl-4\"><li><p>The system must provide logon security at the operating system level and at the application level</p></li><li><p>An employee record must be added, changed, or deleted only by a member of the human resources department</p></li></ul></li><li><p><strong>Scalability</strong></p><ul class=\"list-disc pl-4\"><li><p>A scalable system offers a better return on the initial investment</p></li><li><p>To evaluate scalability, you need information about projected future volume for all outputs, inputs, and processes</p></li></ul></li></ul><p></p><h2 class=\"text-2xl font-semibold\">Determining Requirements</h2><ul class=\"list-disc pl-4\"><li><p>Requirements are best determined by systems analysts <em>and</em> business people together</p></li><li><p>Techniques available to the systems analyst:</p><ul class=\"list-disc pl-4\"><li><p>Interviews</p></li><li><p>Questionnaires</p></li><li><p>Observation</p></li><li><p>Joint application development (JAD)</p></li><li><p>Document analysis</p></li></ul></li></ul><p></p><h3 class=\"text-2xl font-semibold\">The System Proposal</h3><ul class=\"list-disc pl-4\"><li><p>The result of the planning and analysis phases</p></li><li><p>Typically includes:</p><ul class=\"list-disc pl-4\"><li><p>Executive summary</p></li><li><p>System request</p></li><li><p>Work plan</p></li><li><p>Feasibility analysis</p></li><li><p>Requirements definition</p></li><li><p>Evolving system models</p></li></ul></li></ul><p></p><h3 class=\"text-2xl font-semibold\">Documentation</h3><ul class=\"list-disc pl-4\"><li><p>The Need for Recording the Facts</p><ul class=\"list-disc pl-4\"><li><p>Record information as soon as you obtain it</p></li><li><p>Use the simplest recording method</p></li><li><p>Record your findings in such a way that they can be understood by someone else</p></li><li><p>Organize your documentation so related material is located easily</p></li></ul></li></ul><ul class=\"list-disc pl-4\"><li><p>Software Tools</p><ul class=\"list-disc pl-4\"><li><p>CASE Tools</p></li><li><p>Productivity Software</p><ul class=\"list-disc pl-4\"><li><p>Word processing, spreadsheets, database management, presentation graphics, and collaborative software programs</p></li><li><p>Histogram</p></li></ul></li></ul></li></ul><p></p><h3 class=\"text-2xl font-semibold\">Software Tools</h3><ul class=\"list-disc pl-4\"><li><p>Graphics modeling software</p></li><li><p>Personal information managers</p></li><li><p>Wireless communication device</p><p></p></li></ul><p></p>",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "1.1. Introduction to Software Engineering",
    "type": "lesson",
    "moduleId": "d47623f3-a805-4fc2-8556-81445513310d",
    "id": "ca722148-bd1c-417f-ab1f-b157fe7a7383",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-18T00:47:58.170Z",
    "updatedAt": "2025-06-18T00:47:58.170Z",
    "content": "<h2 class=\"text-2xl font-semibold\"><strong>Introduction</strong></h2><p>Software has revolutionized how people live every day. Software is a product of Software Engineering which both are further explained in the succeeding sections. It also discusses what makes a good software. As future software engineers, you are still bound to certain degree of ethics to guide you in creating a good software.<br><br><strong>Software</strong></p><p>A set of instructions or executable codes, libraries, and documentations. It can be developed for specific customer or for general market. There are two types of software<br><br><strong>System Software</strong><br>1.  Operating systems such as Windows for Microsoft, iOS for Apple, Linux, Android</p><ol class=\"list-decimal pl-4\" start=\"2\"><li><p>Firmware</p></li><li><p>Drivers</p></li></ol><p><br><strong>Application Software</strong><br>1.  Browsers such as Google Chrome and Edge</p><ol class=\"list-decimal pl-4\" start=\"2\"><li><p>Word Processor such as Microsoft Word</p></li><li><p>Spreadsheet such as Microsoft Excel</p></li><li><p>Databases such as MySQL and Oracle</p></li></ol><p></p><p>It is said that a good software should deliver the required functionality and performance to the user and should be <strong>maintainable</strong>, <strong>dependable and secured, efficient, and acceptable</strong>.<br>___________________________________________________________________________________<br><br><strong>Attributes of a Good Software</strong></p><ul class=\"list-disc pl-4\"><li><p>Maintainability</p><ul class=\"list-disc pl-4\"><li><p>Software should be written in such a way so that it can evolve to meet the changing needs of customers. This is a critical attribute because software change is an inevitable requirement of a changing business environment.</p></li></ul><ul class=\"list-disc pl-4\"><li><p>Dependability and security</p><ul class=\"list-disc pl-4\"><li><p>Software dependability includes a range of characteristics including reliability, security, and safety. Dependable software should not cause physical or economic damage in the event of system failure. Malicious users should not be able to access or damage the system.</p></li></ul></li><li><p>Efficiency</p><ul class=\"list-disc pl-4\"><li><p>Software should not make wasteful use of system resources such as memory and processor cycles. Efficiency therefore includes responsiveness, processing time, memory utilization, etc.</p></li></ul></li><li><p>Acceptability</p><ul class=\"list-disc pl-4\"><li><p>Software must be acceptable to the type of users for which it is designed. This means that it must be understandable, usable, and compatible with other systems that they use.</p></li></ul></li></ul></li></ul><p>That is why for us to build a good software, we must understand and apply the different concepts and techniques available in Software Engineering.<br>___________________________________________________________________________________<br><br><strong>Software Engineering</strong></p><p>Software engineering is an engineering discipline that is concerned with all aspects of software production from early stages of system specification through maintaining the system after it has gone into use.</p><p>When you are already working out a software the following processes will always be encountered regardless of the model that you are going to follow</p><ol class=\"list-decimal pl-4\"><li><p>Planning</p><ul class=\"list-disc pl-4\"><li><p>Analysis and design</p></li><li><p>Implementation by writing your codes</p></li><li><p>Validation/Testing by employing different types of testing</p></li><li><p>Deployment where you ask your users to use the software</p></li><li><p>Maintenance</p></li></ul></li></ol><p>___________________________________________________________________________________<br><br><strong>Generic Products</strong><br>Usually these are standalone applications such as word processors, databases, and system with generic purpose such as library system and accounting system.<br></p><p>I would like to emphasize the SaaS (or the software as a service) that is available when cloud computing becomes a popular some years ago. The concept is you pay for what you use. Some arrangement also comes in a form of membership package such as FREE, Silver, or Gold members. Of course, the gold members will be able to utilize all features available that the silver package. And the free will have limited features available.<br><br><strong>Customized Products</strong><br>Usually this is where you come in as software engineer<br></p><p>These are software that are specific to customers because they have unique needs than the generic products.<br></p><p>Examples: system to support a business process such as traffic control of course this is not generic because they have different configurations by places.<br>___________________________________________________________________________________<br></p><p><strong>Software Engineering vs Computer Science vs System Engineering</strong></p><p><strong>Computer science</strong> – focuses on theories and methods that underlie computer and software systems. Theories such as data representation, automation, efficiency in coding and processes, as well algorithms.<br></p><p><strong>Software engineering</strong> – concerned with practical problems of producing software. Some knowledge of CS is essential for Software Engineers especially when dealing already with non-functional requirements.<br></p><p><strong>Systems engineering</strong> – concerned with all aspects of computer-based systems development including hardware, software, and process engineering. So, software engineering is simply part of systems engineering.<br><br>Software Engineering Diversity</p><p>Software Engineering is very diverse that the following can be one of the software that you will be working on in the future</p><ol class=\"list-decimal pl-4\"><li><p>Standalone application</p></li><li><p>Interactive transaction-based applications</p></li><li><p>Embedded control systems</p></li><li><p>Batch processing systems</p></li><li><p>Entertainment systems</p></li><li><p>Systems for modeling and simulation</p></li><li><p>Data collection systems</p></li><li><p>Systems of systems – this is interesting because you will be studying how to make different software and hardware work together. The most challenging part are integrating legacy systems with new ones</p></li></ol><p>___________________________________________________________________________________<br><br><strong>Software Engineering Ethics</strong><br></p><ol class=\"list-decimal pl-4\"><li><p><strong>Confidentiality</strong></p></li></ol><p>Respect confidentiality of clients or employers regardless of availability of confidentiality agreement.</p><p>In the industry, we call this as Non-Disclosure Agreement. This is an agreement between client-vendor (third party provider) for non-disclosing any details to non-stakeholders.<br></p><ol class=\"list-decimal pl-4\" start=\"2\"><li><p><strong>Competence</strong></p></li></ol><p>One should not knowingly accept work that is outside of competence</p><p>One should be honest that if it is not their forte or specialization, then they should not take work because it is too risky. If you notice software providers always attached to their name, the level of competence they were able to achieve such as they are Oracle partner therefore, they are in some sort of high confidence in Oracle products.<br></p><ol class=\"list-decimal pl-4\" start=\"3\"><li><p><strong>Intellectual property rights</strong></p></li></ol><p>Observance of local laws and international laws on the use of Intellectual Property such as patents and copyright.</p><p>Licenses must also be respected if available.<br></p><ol class=\"list-decimal pl-4\" start=\"4\"><li><p><strong>Computer misuse</strong></p></li></ol><p>One should not use technical skills to misuse other people’s computer. In the offices, no game playing if there is a policy on games as well as observing strict compliance of social media, visiting unsecured websites due to possibility downloading viruses and malwares.<br>___________________________________________________________________________________<br><br><strong>Summary</strong></p><p>This introduction to software engineering gave you the meaning of software, characteristics of good software, and issues affecting software. Software are also categorized based on their function and they are made.<br></p><p>The lesson also emphasizes the ethics that guides software engineers to become professional.</p>",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "1.1. Introduction to Software Engineering",
    "type": "lesson",
    "moduleId": "9f5e5d1a-6c9e-4ca9-8cb2-ad091404c9c9",
    "id": "d3dacae6-1db8-4b7a-b8b1-9b160eb99e91",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-19T07:04:00.522Z",
    "updatedAt": "2025-06-19T07:04:00.522Z",
    "content": "<h2 class=\"text-2xl font-semibold\"><strong>Introduction</strong></h2><p>Software has revolutionized how people live every day. Software is a product of Software Engineering which both are further explained in the succeeding sections. It also discusses what makes a good software. As future software engineers, you are still bound to certain degree of ethics to guide you in creating a good software.<br><br><strong>Software</strong></p><p>A set of instructions or executable codes, libraries, and documentations. It can be developed for specific customer or for general market. There are two types of software<br><br><strong>System Software</strong><br>1.  Operating systems such as Windows for Microsoft, iOS for Apple, Linux, Android</p><ol class=\"list-decimal pl-4\" start=\"2\"><li><p>Firmware</p></li><li><p>Drivers</p></li></ol><p><br><strong>Application Software</strong><br>1.  Browsers such as Google Chrome and Edge</p><ol class=\"list-decimal pl-4\" start=\"2\"><li><p>Word Processor such as Microsoft Word</p></li><li><p>Spreadsheet such as Microsoft Excel</p></li><li><p>Databases such as MySQL and Oracle</p></li></ol><p></p><p>It is said that a good software should deliver the required functionality and performance to the user and should be <strong>maintainable</strong>, <strong>dependable and secured, efficient, and acceptable</strong>.<br>___________________________________________________________________________________<br><br><strong>Attributes of a Good Software</strong></p><ul class=\"list-disc pl-4\"><li><p>Maintainability</p><ul class=\"list-disc pl-4\"><li><p>Software should be written in such a way so that it can evolve to meet the changing needs of customers. This is a critical attribute because software change is an inevitable requirement of a changing business environment.</p></li></ul><ul class=\"list-disc pl-4\"><li><p>Dependability and security</p><ul class=\"list-disc pl-4\"><li><p>Software dependability includes a range of characteristics including reliability, security, and safety. Dependable software should not cause physical or economic damage in the event of system failure. Malicious users should not be able to access or damage the system.</p></li></ul></li><li><p>Efficiency</p><ul class=\"list-disc pl-4\"><li><p>Software should not make wasteful use of system resources such as memory and processor cycles. Efficiency therefore includes responsiveness, processing time, memory utilization, etc.</p></li></ul></li><li><p>Acceptability</p><ul class=\"list-disc pl-4\"><li><p>Software must be acceptable to the type of users for which it is designed. This means that it must be understandable, usable, and compatible with other systems that they use.</p></li></ul></li></ul></li></ul><p>That is why for us to build a good software, we must understand and apply the different concepts and techniques available in Software Engineering.<br>___________________________________________________________________________________<br><br><strong>Software Engineering</strong></p><p>Software engineering is an engineering discipline that is concerned with all aspects of software production from early stages of system specification through maintaining the system after it has gone into use.</p><p>When you are already working out a software the following processes will always be encountered regardless of the model that you are going to follow</p><ol class=\"list-decimal pl-4\"><li><p>Planning</p><ul class=\"list-disc pl-4\"><li><p>Analysis and design</p></li><li><p>Implementation by writing your codes</p></li><li><p>Validation/Testing by employing different types of testing</p></li><li><p>Deployment where you ask your users to use the software</p></li><li><p>Maintenance</p></li></ul></li></ol><p>___________________________________________________________________________________<br><br><strong>Generic Products</strong><br>Usually these are standalone applications such as word processors, databases, and system with generic purpose such as library system and accounting system.<br></p><p>I would like to emphasize the SaaS (or the software as a service) that is available when cloud computing becomes a popular some years ago. The concept is you pay for what you use. Some arrangement also comes in a form of membership package such as FREE, Silver, or Gold members. Of course, the gold members will be able to utilize all features available that the silver package. And the free will have limited features available.<br><br><strong>Customized Products</strong><br>Usually this is where you come in as software engineer<br></p><p>These are software that are specific to customers because they have unique needs than the generic products.<br></p><p>Examples: system to support a business process such as traffic control of course this is not generic because they have different configurations by places.<br>___________________________________________________________________________________<br></p><p><strong>Software Engineering vs Computer Science vs System Engineering</strong></p><p><strong>Computer science</strong> – focuses on theories and methods that underlie computer and software systems. Theories such as data representation, automation, efficiency in coding and processes, as well algorithms.<br></p><p><strong>Software engineering</strong> – concerned with practical problems of producing software. Some knowledge of CS is essential for Software Engineers especially when dealing already with non-functional requirements.<br></p><p><strong>Systems engineering</strong> – concerned with all aspects of computer-based systems development including hardware, software, and process engineering. So, software engineering is simply part of systems engineering.<br><br>Software Engineering Diversity</p><p>Software Engineering is very diverse that the following can be one of the software that you will be working on in the future</p><ol class=\"list-decimal pl-4\"><li><p>Standalone application</p></li><li><p>Interactive transaction-based applications</p></li><li><p>Embedded control systems</p></li><li><p>Batch processing systems</p></li><li><p>Entertainment systems</p></li><li><p>Systems for modeling and simulation</p></li><li><p>Data collection systems</p></li><li><p>Systems of systems – this is interesting because you will be studying how to make different software and hardware work together. The most challenging part are integrating legacy systems with new ones</p></li></ol><p>___________________________________________________________________________________<br><br><strong>Software Engineering Ethics</strong><br></p><ol class=\"list-decimal pl-4\"><li><p><strong>Confidentiality</strong></p></li></ol><p>Respect confidentiality of clients or employers regardless of availability of confidentiality agreement.</p><p>In the industry, we call this as Non-Disclosure Agreement. This is an agreement between client-vendor (third party provider) for non-disclosing any details to non-stakeholders.<br></p><ol class=\"list-decimal pl-4\" start=\"2\"><li><p><strong>Competence</strong></p></li></ol><p>One should not knowingly accept work that is outside of competence</p><p>One should be honest that if it is not their forte or specialization, then they should not take work because it is too risky. If you notice software providers always attached to their name, the level of competence they were able to achieve such as they are Oracle partner therefore, they are in some sort of high confidence in Oracle products.<br></p><ol class=\"list-decimal pl-4\" start=\"3\"><li><p><strong>Intellectual property rights</strong></p></li></ol><p>Observance of local laws and international laws on the use of Intellectual Property such as patents and copyright.</p><p>Licenses must also be respected if available.<br></p><ol class=\"list-decimal pl-4\" start=\"4\"><li><p><strong>Computer misuse</strong></p></li></ol><p>One should not use technical skills to misuse other people’s computer. In the offices, no game playing if there is a policy on games as well as observing strict compliance of social media, visiting unsecured websites due to possibility downloading viruses and malwares.<br>___________________________________________________________________________________<br><br><strong>Summary</strong></p><p>This introduction to software engineering gave you the meaning of software, characteristics of good software, and issues affecting software. Software are also categorized based on their function and they are made.<br></p><p>The lesson also emphasizes the ethics that guides software engineers to become professional.</p>",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "1.0 Intended Learning Outcomes and Topics",
    "type": "lesson",
    "moduleId": "9f5e5d1a-6c9e-4ca9-8cb2-ad091404c9c9",
    "id": "d6b508a3-8c67-4412-bb43-052551eee040",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-19T07:03:59.884Z",
    "updatedAt": "2025-06-19T07:03:59.884Z",
    "content": "<h1 class=\"text-2xl font-semibold\">INTRODUCTION TO SYSTEMS ANALYSIS AND DESIGN<br></h1><p>This course deals with the concepts, skills, methodologies, techniques, tools, and perspectives essential for systems analysts.<br><br>Intended Learning Outcomes</p><p>At the end of this lesson, the student should be able to:<br></p><ul class=\"list-disc pl-4\"><li><p>Understand the importance, characteristic, paradigms of Systems Analysis and Design;</p></li><li><p>Equip students with structured analysis tools in undertaking software requirements analysis;</p></li><li><p>Apply software designing and implementation methods and metrics, cost-benefit analysis, and feasibility study to ensure software quality;&nbsp;</p></li><li><p>Develop critical thinking skills in analyzing, justifying, designing, and maintaining Information Systems and computer-based requirements;</p></li><li><p>Design and develop an application in computing using the different paradigms of system development.<br><br></p></li></ul>",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "2.0 Intended Learning Outcomes and Topics",
    "type": "lesson",
    "moduleId": "44d9e5e4-6aea-4c28-9b84-d8cab12249bd",
    "id": "dbab0a63-8d00-466c-baeb-d497ccb91d9b",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-19T07:04:13.439Z",
    "isLocked": false,
    "isPublished": true,
    "content": "<h1 class=\"text-2xl font-semibold\">SYSTEMS ANALYSIS AND DESIGN</h1><p>This course deals with the concepts, skills, methodologies, techniques, tools, and perspectives essential for systems analysts.<br><br><strong>Intended Learning Outcomes</strong></p><p>At the end of this lesson, the student should be able to:</p><ol class=\"list-decimal pl-4\"><li><p>Know about Project Initiation;</p></li><li><p>Distinguish Requirements Determination;</p></li><li><p>Explain the importance of linking the information system to business needs;&nbsp;</p></li><li><p>Determine the components of system requirements;</p></li><li><p>Describe technical, economic, and organizational feasibility assessment; and</p></li><li><p>Be able to perform a feasibility analysis.<br></p></li></ol>",
    "updatedAt": "2025-06-19T07:04:13.439Z"
  },
  {
    "title": "Course Syllabus - Software Engineering 1",
    "type": "lesson",
    "moduleId": "34ff4983-18f6-45db-a8f4-6cec58dc9dcf",
    "id": "ec8568b6-a212-4847-8a84-25b26fa04fc3",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-18T00:35:33.705Z",
    "updatedAt": "2025-06-18T00:35:33.705Z",
    "content": "<p><strong>Course Title:</strong> Software Engineering 1<br><strong>Course Code:</strong> CS 301<br><strong>Credit Units:</strong> 3<br><strong>Prerequisite(s):</strong> Introduction to Programming, Object-Oriented Programming<br><strong>Schedule:</strong> Monday, Wednesday, Friday [7:30AM - 10:30AM]<br><strong>Instructor:</strong> Carlo R. Enrique<br><strong>Email:</strong> cramos@nestling.edu.ph<br>________________________________________________________________________________<br><br>📖 <strong>Course Description</strong></p><p>Software Engineering 1 introduces students to the principles and practices of developing high-quality software. Topics include software development life cycles, requirements engineering, software modeling, architectural design, and basic project planning. The course emphasizes teamwork, documentation, and the use of tools to manage the development process effectively.<br><br>🎯 <strong>Course Objectives</strong></p><p>By the end of this course, students should be able to:</p><ol class=\"list-decimal pl-4\"><li><p>Explain the software engineering process and its key phases.</p></li><li><p>Apply requirements-gathering techniques to real-world scenarios.</p></li><li><p>Create system models using UML or similar modeling tools.</p></li><li><p>Analyze and design basic software architectures.</p></li><li><p>Participate effectively in team-based software projects.</p></li><li><p>Use version control and documentation tools.</p></li><li><p>Demonstrate understanding of software quality and maintenance.<br><br></p></li></ol>",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "2.1 Project Initiation: System Request",
    "type": "lesson",
    "moduleId": "44d9e5e4-6aea-4c28-9b84-d8cab12249bd",
    "id": "eff8ea9e-7c61-4854-b214-98d59ee62d20",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-19T07:04:14.454Z",
    "updatedAt": "2025-06-19T07:04:14.454Z",
    "content": "<h2 class=\"text-2xl font-semibold\">Key Ideas</h2><ul class=\"list-disc pl-4\"><li><p>An opportunity to create business value from using information technology initiates a project.</p></li><li><p>Feasibility analysis helps determine whether or not to proceed with the IS project.</p></li><li><p>Projects are selected based on business needs and project risks.</p></li><li><p>The project sponsor is a key person who identifies business value to be gained from using information technology.</p></li><li><p>The approval committee reviews system requests from groups throughout the organization and selects projects for the benefit of the business.</p></li></ul><hr><h2 class=\"text-2xl font-semibold\"><br>Identifying Projects with Business Value</h2><p><strong>How Do Projects Begin?</strong></p><ul class=\"list-disc pl-4\"><li><p>Business needs should drive projects.</p><ul class=\"list-disc pl-4\"><li><p>Project sponsor recognizes business need for new system and desires to see it implemented.</p></li><li><p>Business needs determine the system’s functionality (what it will do).</p></li><li><p>The project’s business value should be clear.</p></li></ul></li></ul><hr><h2 class=\"text-2xl font-semibold\"><br>System Request</h2><p>A document describing business reasons for project and system’s expected value.</p><p>Lists project’s key elements:</p><ul class=\"list-disc pl-4\"><li><p>Project sponsor</p></li><li><p>Business need</p></li><li><p>Business requirements</p></li><li><p>Business value</p></li><li><p>Special issues or constraints</p></li></ul><hr><h2 class=\"text-2xl font-semibold\"><br>System Request Examples</h2><ul class=\"list-disc pl-4\"><li><p>Project sponsor – VP of Marketing</p></li><li><p>Business need – Reach new customers and improve service to existing customers</p></li><li><p>Business requirements – Provide web-based shopping capability</p></li><li><p>Business value - $750,000 in new customer sales; $1.8M in existing customer sales</p></li><li><p>Special issues or constraints – System must be operational by holiday shopping season</p></li></ul><hr><h2 class=\"text-2xl font-semibold\"><br>Preliminary Project Acceptance</h2><ul class=\"list-disc pl-4\"><li><p>System request is reviewed by approval committee.</p></li><li><p>Based on information provided, project merits are assessed.</p></li><li><p>Worthy projects are accepted and undergo additional investigation – the feasibility analysis.</p></li></ul>",
    "isLocked": false,
    "isPublished": true
  },
  {
    "title": "Test submission for text",
    "type": "assignment",
    "moduleId": "35f70b94-1e41-406c-9b3e-6d5258e252ce",
    "id": "fc9d06da-7d89-4dfd-b434-840b70d6692b",
    "courseId": "8e8b29e4-dec9-4be8-a9b2-d276b94a8262",
    "createdAt": "2025-06-19T12:54:46.944Z",
    "updatedAt": "2025-06-19T12:54:46.944Z",
    "startDate": "2025-06-18T16:00:00.000Z",
    "endDate": "2025-06-26T16:00:00.000Z",
    "submissionType": "text",
    "points": 10,
    "maxAttempts": 1,
    "isLocked": false,
    "content": "<p>pasa kau text</p>",
    "isPublished": true
  },
  {
    "title": "Types of Information Systems Part 1",
    "type": "file",
    "moduleId": "9f5e5d1a-6c9e-4ca9-8cb2-ad091404c9c9",
    "id": "ffdc5748-b503-443f-96c7-7a17ea6c7680",
    "courseId": "e23a04e4-fc8c-407a-b3d8-04fcc2ccf221",
    "createdAt": "2025-06-19T07:04:02.245Z",
    "updatedAt": "2025-06-19T07:04:02.245Z",
    "content": "",
    "isLocked": false,
    "isPublished": true
  }
]
